JSNES.DummyUI=function(nes){this.nes=nes;this.enable=function(){};this.updateStatus=function(){};this.writeAudio=function(){};this.writeFrame=function(){};};if(typeof jQuery!=='undefined'){(function($){$.fn.JSNESUI=function(){let parent=this;let UI=function(nes){let self=this;self.nes=nes;self.root=$('<div></div>');self.screen=$('<canvas class="nes-screen" width="256" height="240"></canvas>').appendTo(self.root);self.root.appendTo(parent);self.canvasContext=self.screen[0].getContext('2d');if(!self.canvasContext.getImageData){parent.html("Your browser doesn't support writing pixels directly to the <code>&lt;canvas&gt;</code> tag. Try the latest versions of Google Chrome, Safari, Opera or Firefox!");return;}self.canvasImageData=self.canvasContext.getImageData(0,0,256,240);self.resetCanvas();$(document).bind('keydown',function(evt){self.nes.keyboard.keyDown(evt);}).bind('keyup',function(evt){self.nes.keyboard.keyUp(evt);}).bind('keypress',function(evt){self.nes.keyboard.keyPress(evt);});window.AudioContext=window.webkitAudioContext||window.AudioContext;try{self.audio=new AudioContext();}catch(e){console.error(e);}};UI.prototype={loadROM:function(romData){let self=this;self.nes.loadRom(romData);self.nes.start();self.enable();},resetCanvas:function(){this.canvasContext.fillStyle='black';this.canvasContext.fillRect(0,0,256,240);for(let i=3;i<this.canvasImageData.data.length-3;i+=4){this.canvasImageData.data[i]=0xFF;}},enable:function(){},updateStatus:function(s){console.log(s)},writeAudio:function(samples){let buffer=this.audio.createBuffer(2,samples.length,this.audio.sampleRate);let channelLeft=buffer.getChannelData(0);let channelRight=buffer.getChannelData(1);let j=0;for(let i=0;i<samples.length;i+=2){channelLeft[j]=this.intToFloatSample(samples[i]);channelRight[j]=this.intToFloatSample(samples[i+1]);j++;}let source=this.audio.createBufferSource();source.buffer=buffer;source.connect(this.audio.destination);source.start();},intToFloatSample:function(value){return value/32767;},writeFrame:function(buffer,prevBuffer){let imageData=this.canvasImageData.data;let pixel,i,j;for(i=0;i<256*240;i++){pixel=buffer[i];if(pixel!==prevBuffer[i]){j=i*4;imageData[j]=pixel&0xFF;imageData[j+1]=(pixel>>8)&0xFF;imageData[j+2]=(pixel>>16)&0xFF;prevBuffer[i]=pixel;}}this.canvasContext.putImageData(this.canvasImageData,0,0);}};return UI;};})(jQuery);}