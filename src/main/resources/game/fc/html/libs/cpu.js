JSNES.CPU=function(nes){this.nes=nes;this.mem=null;this.REG_ACC=null;this.REG_X=null;this.REG_Y=null;this.REG_SP=null;this.REG_PC=null;this.REG_PC_NEW=null;this.REG_STATUS=null;this.F_CARRY=null;this.F_DECIMAL=null;this.F_INTERRUPT=null;this.F_INTERRUPT_NEW=null;this.F_OVERFLOW=null;this.F_SIGN=null;this.F_ZERO=null;this.F_NOTUSED=null;this.F_NOTUSED_NEW=null;this.F_BRK=null;this.F_BRK_NEW=null;this.opdata=null;this.cyclesToHalt=null;this.crash=null;this.irqRequested=null;this.irqType=null;this.reset()};JSNES.CPU.prototype={IRQ_NORMAL:0,IRQ_NMI:1,IRQ_RESET:2,reset:function(){this.mem=new Array(65536);for(var i=0;i<8192;i++){this.mem[i]=255}for(var p=0;p<4;p++){var i=p*2048;this.mem[i+8]=247;this.mem[i+9]=239;this.mem[i+10]=223;this.mem[i+15]=191}for(var i=8193;i<this.mem.length;i++){this.mem[i]=0}this.REG_ACC=0;this.REG_X=0;this.REG_Y=0;this.REG_SP=511;this.REG_PC=32768-1;this.REG_PC_NEW=32768-1;this.REG_STATUS=40;this.setStatus(40);this.F_CARRY=0;this.F_DECIMAL=0;this.F_INTERRUPT=1;this.F_INTERRUPT_NEW=1;this.F_OVERFLOW=0;this.F_SIGN=0;this.F_ZERO=1;this.F_NOTUSED=1;this.F_NOTUSED_NEW=1;this.F_BRK=1;this.F_BRK_NEW=1;this.opdata=new JSNES.CPU.OpData().opdata;this.cyclesToHalt=0;this.crash=false;this.irqRequested=false;this.irqType=null},emulate:function(){var temp;var add;if(this.irqRequested){temp=(this.F_CARRY)|((this.F_ZERO===0?1:0)<<1)|(this.F_INTERRUPT<<2)|(this.F_DECIMAL<<3)|(this.F_BRK<<4)|(this.F_NOTUSED<<5)|(this.F_OVERFLOW<<6)|(this.F_SIGN<<7);this.REG_PC_NEW=this.REG_PC;this.F_INTERRUPT_NEW=this.F_INTERRUPT;switch(this.irqType){case 0:if(this.F_INTERRUPT!=0){break}this.doIrq(temp);break;case 1:this.doNonMaskableInterrupt(temp);break;case 2:this.doResetInterrupt();break}this.REG_PC=this.REG_PC_NEW;this.F_INTERRUPT=this.F_INTERRUPT_NEW;this.F_BRK=this.F_BRK_NEW;this.irqRequested=false}var opinf=this.opdata[this.nes.mmap.load(this.REG_PC+1)];var cycleCount=(opinf>>24);var cycleAdd=0;var addrMode=(opinf>>8)&255;var opaddr=this.REG_PC;this.REG_PC+=((opinf>>16)&255);var addr=0;switch(addrMode){case 0:addr=this.load(opaddr+2);break;case 1:addr=this.load(opaddr+2);if(addr<128){addr+=this.REG_PC}else{addr+=this.REG_PC-256}break;case 2:break;case 3:addr=this.load16bit(opaddr+2);break;case 4:addr=this.REG_ACC;break;case 5:addr=this.REG_PC;break;case 6:addr=(this.load(opaddr+2)+this.REG_X)&255;break;case 7:addr=(this.load(opaddr+2)+this.REG_Y)&255;break;case 8:addr=this.load16bit(opaddr+2);if((addr&65280)!=((addr+this.REG_X)&65280)){cycleAdd=1}addr+=this.REG_X;break;case 9:addr=this.load16bit(opaddr+2);if((addr&65280)!=((addr+this.REG_Y)&65280)){cycleAdd=1}addr+=this.REG_Y;break;case 10:addr=this.load(opaddr+2);if((addr&65280)!=((addr+this.REG_X)&65280)){cycleAdd=1}addr+=this.REG_X;addr&=255;addr=this.load16bit(addr);break;case 11:addr=this.load16bit(this.load(opaddr+2));if((addr&65280)!=((addr+this.REG_Y)&65280)){cycleAdd=1}addr+=this.REG_Y;break;case 12:addr=this.load16bit(opaddr+2);if(addr<8191){addr=this.mem[addr]+(this.mem[(addr&65280)|(((addr&255)+1)&255)]<<8)}else{addr=this.nes.mmap.load(addr)+(this.nes.mmap.load((addr&65280)|(((addr&255)+1)&255))<<8)}break}addr&=65535;switch(opinf&255){case 0:temp=this.REG_ACC+this.load(addr)+this.F_CARRY;this.F_OVERFLOW=((!(((this.REG_ACC^this.load(addr))&128)!=0)&&(((this.REG_ACC^temp)&128))!=0)?1:0);this.F_CARRY=(temp>255?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&255;this.REG_ACC=(temp&255);cycleCount+=cycleAdd;break;case 1:this.REG_ACC=this.REG_ACC&this.load(addr);this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;if(addrMode!=11){cycleCount+=cycleAdd}break;case 2:if(addrMode==4){this.F_CARRY=(this.REG_ACC>>7)&1;this.REG_ACC=(this.REG_ACC<<1)&255;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC}else{temp=this.load(addr);this.F_CARRY=(temp>>7)&1;temp=(temp<<1)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;this.write(addr,temp)}break;case 3:if(this.F_CARRY==0){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 4:if(this.F_CARRY==1){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 5:if(this.F_ZERO==0){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 6:temp=this.load(addr);this.F_SIGN=(temp>>7)&1;this.F_OVERFLOW=(temp>>6)&1;temp&=this.REG_ACC;this.F_ZERO=temp;break;case 7:if(this.F_SIGN==1){cycleCount++;this.REG_PC=addr}break;case 8:if(this.F_ZERO!=0){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 9:if(this.F_SIGN==0){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 10:this.REG_PC+=2;this.push((this.REG_PC>>8)&255);this.push(this.REG_PC&255);this.F_BRK=1;this.push((this.F_CARRY)|((this.F_ZERO==0?1:0)<<1)|(this.F_INTERRUPT<<2)|(this.F_DECIMAL<<3)|(this.F_BRK<<4)|(this.F_NOTUSED<<5)|(this.F_OVERFLOW<<6)|(this.F_SIGN<<7));this.F_INTERRUPT=1;this.REG_PC=this.load16bit(65534);this.REG_PC--;break;case 11:if(this.F_OVERFLOW==0){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);this.REG_PC=addr}break;case 12:if(this.F_OVERFLOW==1){cycleCount+=((opaddr&65280)!=(addr&65280)?2:1);
        this.REG_PC=addr}break;case 13:this.F_CARRY=0;break;case 14:this.F_DECIMAL=0;break;case 15:this.F_INTERRUPT=0;break;case 16:this.F_OVERFLOW=0;break;case 17:temp=this.REG_ACC-this.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&255;cycleCount+=cycleAdd;break;case 18:temp=this.REG_X-this.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&255;break;case 19:temp=this.REG_Y-this.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&255;break;case 20:temp=(this.load(addr)-1)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;this.write(addr,temp);break;case 21:this.REG_X=(this.REG_X-1)&255;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;case 22:this.REG_Y=(this.REG_Y-1)&255;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;case 23:this.REG_ACC=(this.load(addr)^this.REG_ACC)&255;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;cycleCount+=cycleAdd;break;case 24:temp=(this.load(addr)+1)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;this.write(addr,temp&255);break;case 25:this.REG_X=(this.REG_X+1)&255;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;case 26:this.REG_Y++;this.REG_Y&=255;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;case 27:this.REG_PC=addr-1;break;case 28:this.push((this.REG_PC>>8)&255);this.push(this.REG_PC&255);this.REG_PC=addr-1;break;case 29:this.REG_ACC=this.load(addr);this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;cycleCount+=cycleAdd;break;case 30:this.REG_X=this.load(addr);this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;cycleCount+=cycleAdd;break;case 31:this.REG_Y=this.load(addr);this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;cycleCount+=cycleAdd;break;case 32:if(addrMode==4){temp=(this.REG_ACC&255);this.F_CARRY=temp&1;temp>>=1;this.REG_ACC=temp}else{temp=this.load(addr)&255;this.F_CARRY=temp&1;temp>>=1;this.write(addr,temp)}this.F_SIGN=0;this.F_ZERO=temp;break;case 33:break;case 34:temp=(this.load(addr)|this.REG_ACC)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;this.REG_ACC=temp;if(addrMode!=11){cycleCount+=cycleAdd}break;case 35:this.push(this.REG_ACC);break;case 36:this.F_BRK=1;this.push((this.F_CARRY)|((this.F_ZERO==0?1:0)<<1)|(this.F_INTERRUPT<<2)|(this.F_DECIMAL<<3)|(this.F_BRK<<4)|(this.F_NOTUSED<<5)|(this.F_OVERFLOW<<6)|(this.F_SIGN<<7));break;case 37:this.REG_ACC=this.pull();this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;case 38:temp=this.pull();this.F_CARRY=(temp)&1;this.F_ZERO=(((temp>>1)&1)==1)?0:1;this.F_INTERRUPT=(temp>>2)&1;this.F_DECIMAL=(temp>>3)&1;this.F_BRK=(temp>>4)&1;this.F_NOTUSED=(temp>>5)&1;this.F_OVERFLOW=(temp>>6)&1;this.F_SIGN=(temp>>7)&1;this.F_NOTUSED=1;break;case 39:if(addrMode==4){temp=this.REG_ACC;add=this.F_CARRY;this.F_CARRY=(temp>>7)&1;temp=((temp<<1)&255)+add;this.REG_ACC=temp}else{temp=this.load(addr);add=this.F_CARRY;this.F_CARRY=(temp>>7)&1;temp=((temp<<1)&255)+add;this.write(addr,temp)}this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;break;case 40:if(addrMode==4){add=this.F_CARRY<<7;this.F_CARRY=this.REG_ACC&1;temp=(this.REG_ACC>>1)+add;this.REG_ACC=temp}else{temp=this.load(addr);add=this.F_CARRY<<7;this.F_CARRY=temp&1;temp=(temp>>1)+add;this.write(addr,temp)}this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;break;case 41:temp=this.pull();this.F_CARRY=(temp)&1;this.F_ZERO=((temp>>1)&1)==0?1:0;this.F_INTERRUPT=(temp>>2)&1;this.F_DECIMAL=(temp>>3)&1;this.F_BRK=(temp>>4)&1;this.F_NOTUSED=(temp>>5)&1;this.F_OVERFLOW=(temp>>6)&1;this.F_SIGN=(temp>>7)&1;this.REG_PC=this.pull();this.REG_PC+=(this.pull()<<8);if(this.REG_PC==65535){return}this.REG_PC--;this.F_NOTUSED=1;break;case 42:this.REG_PC=this.pull();this.REG_PC+=(this.pull()<<8);if(this.REG_PC==65535){return}break;case 43:temp=this.REG_ACC-this.load(addr)-(1-this.F_CARRY);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&255;this.F_OVERFLOW=((((this.REG_ACC^temp)&128)!=0&&((this.REG_ACC^this.load(addr))&128)!=0)?1:0);this.F_CARRY=(temp<0?0:1);this.REG_ACC=(temp&255);if(addrMode!=11){cycleCount+=cycleAdd}break;case 44:this.F_CARRY=1;break;case 45:this.F_DECIMAL=1;break;case 46:this.F_INTERRUPT=1;break;case 47:this.write(addr,this.REG_ACC);break;case 48:this.write(addr,this.REG_X);break;case 49:this.write(addr,this.REG_Y);break;case 50:this.REG_X=this.REG_ACC;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;case 51:this.REG_Y=this.REG_ACC;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;case 52:this.REG_X=(this.REG_SP-256);this.F_SIGN=(this.REG_SP>>7)&1;this.F_ZERO=this.REG_X;break;case 53:this.REG_ACC=this.REG_X;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;case 54:this.REG_SP=(this.REG_X+256);this.stackWrap();break;case 55:this.REG_ACC=this.REG_Y;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;default:this.nes.stop();this.nes.crashMessage="Game crashed, invalid opcode at address $"+opaddr.toString(16);break}return cycleCount},load:function(addr){if(addr<8192){return this.mem[addr&2047]}else{return this.nes.mmap.load(addr)
    }},load16bit:function(addr){if(addr<8191){return this.mem[addr&2047]|(this.mem[(addr+1)&2047]<<8)}else{return this.nes.mmap.load(addr)|(this.nes.mmap.load(addr+1)<<8)}},write:function(addr,val){if(addr<8192){this.mem[addr&2047]=val}else{this.nes.mmap.write(addr,val)}},requestIrq:function(type){if(this.irqRequested){if(type==this.IRQ_NORMAL){return}}this.irqRequested=true;this.irqType=type},push:function(value){this.nes.mmap.write(this.REG_SP,value);this.REG_SP--;this.REG_SP=256|(this.REG_SP&255)},stackWrap:function(){this.REG_SP=256|(this.REG_SP&255)},pull:function(){this.REG_SP++;this.REG_SP=256|(this.REG_SP&255);return this.nes.mmap.load(this.REG_SP)},pageCrossed:function(addr1,addr2){return((addr1&65280)!=(addr2&65280))},haltCycles:function(cycles){this.cyclesToHalt+=cycles},doNonMaskableInterrupt:function(status){if((this.nes.mmap.load(8192)&128)!=0){this.REG_PC_NEW++;this.push((this.REG_PC_NEW>>8)&255);this.push(this.REG_PC_NEW&255);this.push(status);this.REG_PC_NEW=this.nes.mmap.load(65530)|(this.nes.mmap.load(65531)<<8);this.REG_PC_NEW--}},doResetInterrupt:function(){this.REG_PC_NEW=this.nes.mmap.load(65532)|(this.nes.mmap.load(65533)<<8);this.REG_PC_NEW--},doIrq:function(status){this.REG_PC_NEW++;this.push((this.REG_PC_NEW>>8)&255);this.push(this.REG_PC_NEW&255);this.push(status);this.F_INTERRUPT_NEW=1;this.F_BRK_NEW=0;this.REG_PC_NEW=this.nes.mmap.load(65534)|(this.nes.mmap.load(65535)<<8);this.REG_PC_NEW--},getStatus:function(){return(this.F_CARRY)|(this.F_ZERO<<1)|(this.F_INTERRUPT<<2)|(this.F_DECIMAL<<3)|(this.F_BRK<<4)|(this.F_NOTUSED<<5)|(this.F_OVERFLOW<<6)|(this.F_SIGN<<7)},setStatus:function(st){this.F_CARRY=(st)&1;this.F_ZERO=(st>>1)&1;this.F_INTERRUPT=(st>>2)&1;this.F_DECIMAL=(st>>3)&1;this.F_BRK=(st>>4)&1;this.F_NOTUSED=(st>>5)&1;this.F_OVERFLOW=(st>>6)&1;this.F_SIGN=(st>>7)&1},JSON_PROPERTIES:["mem","cyclesToHalt","irqRequested","irqType","REG_ACC","REG_X","REG_Y","REG_SP","REG_PC","REG_PC_NEW","REG_STATUS","F_CARRY","F_DECIMAL","F_INTERRUPT","F_INTERRUPT_NEW","F_OVERFLOW","F_SIGN","F_ZERO","F_NOTUSED","F_NOTUSED_NEW","F_BRK","F_BRK_NEW"],toJSON:function(){return JSNES.Utils.toJSON(this)},fromJSON:function(s){JSNES.Utils.fromJSON(this,s)}};JSNES.CPU.OpData=function(){this.opdata=new Array(256);for(var i=0;i<256;i++){this.opdata[i]=255}this.setOp(this.INS_ADC,105,this.ADDR_IMM,2,2);this.setOp(this.INS_ADC,101,this.ADDR_ZP,2,3);this.setOp(this.INS_ADC,117,this.ADDR_ZPX,2,4);this.setOp(this.INS_ADC,109,this.ADDR_ABS,3,4);this.setOp(this.INS_ADC,125,this.ADDR_ABSX,3,4);this.setOp(this.INS_ADC,121,this.ADDR_ABSY,3,4);this.setOp(this.INS_ADC,97,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_ADC,113,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_AND,41,this.ADDR_IMM,2,2);this.setOp(this.INS_AND,37,this.ADDR_ZP,2,3);this.setOp(this.INS_AND,53,this.ADDR_ZPX,2,4);this.setOp(this.INS_AND,45,this.ADDR_ABS,3,4);this.setOp(this.INS_AND,61,this.ADDR_ABSX,3,4);this.setOp(this.INS_AND,57,this.ADDR_ABSY,3,4);this.setOp(this.INS_AND,33,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_AND,49,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_ASL,10,this.ADDR_ACC,1,2);this.setOp(this.INS_ASL,6,this.ADDR_ZP,2,5);this.setOp(this.INS_ASL,22,this.ADDR_ZPX,2,6);this.setOp(this.INS_ASL,14,this.ADDR_ABS,3,6);this.setOp(this.INS_ASL,30,this.ADDR_ABSX,3,7);this.setOp(this.INS_BCC,144,this.ADDR_REL,2,2);this.setOp(this.INS_BCS,176,this.ADDR_REL,2,2);this.setOp(this.INS_BEQ,240,this.ADDR_REL,2,2);this.setOp(this.INS_BIT,36,this.ADDR_ZP,2,3);this.setOp(this.INS_BIT,44,this.ADDR_ABS,3,4);this.setOp(this.INS_BMI,48,this.ADDR_REL,2,2);this.setOp(this.INS_BNE,208,this.ADDR_REL,2,2);this.setOp(this.INS_BPL,16,this.ADDR_REL,2,2);this.setOp(this.INS_BRK,0,this.ADDR_IMP,1,7);this.setOp(this.INS_BVC,80,this.ADDR_REL,2,2);this.setOp(this.INS_BVS,112,this.ADDR_REL,2,2);this.setOp(this.INS_CLC,24,this.ADDR_IMP,1,2);this.setOp(this.INS_CLD,216,this.ADDR_IMP,1,2);this.setOp(this.INS_CLI,88,this.ADDR_IMP,1,2);this.setOp(this.INS_CLV,184,this.ADDR_IMP,1,2);this.setOp(this.INS_CMP,201,this.ADDR_IMM,2,2);this.setOp(this.INS_CMP,197,this.ADDR_ZP,2,3);this.setOp(this.INS_CMP,213,this.ADDR_ZPX,2,4);this.setOp(this.INS_CMP,205,this.ADDR_ABS,3,4);this.setOp(this.INS_CMP,221,this.ADDR_ABSX,3,4);this.setOp(this.INS_CMP,217,this.ADDR_ABSY,3,4);this.setOp(this.INS_CMP,193,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_CMP,209,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_CPX,224,this.ADDR_IMM,2,2);this.setOp(this.INS_CPX,228,this.ADDR_ZP,2,3);this.setOp(this.INS_CPX,236,this.ADDR_ABS,3,4);this.setOp(this.INS_CPY,192,this.ADDR_IMM,2,2);this.setOp(this.INS_CPY,196,this.ADDR_ZP,2,3);this.setOp(this.INS_CPY,204,this.ADDR_ABS,3,4);this.setOp(this.INS_DEC,198,this.ADDR_ZP,2,5);this.setOp(this.INS_DEC,214,this.ADDR_ZPX,2,6);this.setOp(this.INS_DEC,206,this.ADDR_ABS,3,6);this.setOp(this.INS_DEC,222,this.ADDR_ABSX,3,7);this.setOp(this.INS_DEX,202,this.ADDR_IMP,1,2);this.setOp(this.INS_DEY,136,this.ADDR_IMP,1,2);this.setOp(this.INS_EOR,73,this.ADDR_IMM,2,2);this.setOp(this.INS_EOR,69,this.ADDR_ZP,2,3);
    this.setOp(this.INS_EOR,85,this.ADDR_ZPX,2,4);this.setOp(this.INS_EOR,77,this.ADDR_ABS,3,4);this.setOp(this.INS_EOR,93,this.ADDR_ABSX,3,4);this.setOp(this.INS_EOR,89,this.ADDR_ABSY,3,4);this.setOp(this.INS_EOR,65,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_EOR,81,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_INC,230,this.ADDR_ZP,2,5);this.setOp(this.INS_INC,246,this.ADDR_ZPX,2,6);this.setOp(this.INS_INC,238,this.ADDR_ABS,3,6);this.setOp(this.INS_INC,254,this.ADDR_ABSX,3,7);this.setOp(this.INS_INX,232,this.ADDR_IMP,1,2);this.setOp(this.INS_INY,200,this.ADDR_IMP,1,2);this.setOp(this.INS_JMP,76,this.ADDR_ABS,3,3);this.setOp(this.INS_JMP,108,this.ADDR_INDABS,3,5);this.setOp(this.INS_JSR,32,this.ADDR_ABS,3,6);this.setOp(this.INS_LDA,169,this.ADDR_IMM,2,2);this.setOp(this.INS_LDA,165,this.ADDR_ZP,2,3);this.setOp(this.INS_LDA,181,this.ADDR_ZPX,2,4);this.setOp(this.INS_LDA,173,this.ADDR_ABS,3,4);this.setOp(this.INS_LDA,189,this.ADDR_ABSX,3,4);this.setOp(this.INS_LDA,185,this.ADDR_ABSY,3,4);this.setOp(this.INS_LDA,161,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_LDA,177,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_LDX,162,this.ADDR_IMM,2,2);this.setOp(this.INS_LDX,166,this.ADDR_ZP,2,3);this.setOp(this.INS_LDX,182,this.ADDR_ZPY,2,4);this.setOp(this.INS_LDX,174,this.ADDR_ABS,3,4);this.setOp(this.INS_LDX,190,this.ADDR_ABSY,3,4);this.setOp(this.INS_LDY,160,this.ADDR_IMM,2,2);this.setOp(this.INS_LDY,164,this.ADDR_ZP,2,3);this.setOp(this.INS_LDY,180,this.ADDR_ZPX,2,4);this.setOp(this.INS_LDY,172,this.ADDR_ABS,3,4);this.setOp(this.INS_LDY,188,this.ADDR_ABSX,3,4);this.setOp(this.INS_LSR,74,this.ADDR_ACC,1,2);this.setOp(this.INS_LSR,70,this.ADDR_ZP,2,5);this.setOp(this.INS_LSR,86,this.ADDR_ZPX,2,6);this.setOp(this.INS_LSR,78,this.ADDR_ABS,3,6);this.setOp(this.INS_LSR,94,this.ADDR_ABSX,3,7);this.setOp(this.INS_NOP,234,this.ADDR_IMP,1,2);this.setOp(this.INS_ORA,9,this.ADDR_IMM,2,2);this.setOp(this.INS_ORA,5,this.ADDR_ZP,2,3);this.setOp(this.INS_ORA,21,this.ADDR_ZPX,2,4);this.setOp(this.INS_ORA,13,this.ADDR_ABS,3,4);this.setOp(this.INS_ORA,29,this.ADDR_ABSX,3,4);this.setOp(this.INS_ORA,25,this.ADDR_ABSY,3,4);this.setOp(this.INS_ORA,1,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_ORA,17,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_PHA,72,this.ADDR_IMP,1,3);this.setOp(this.INS_PHP,8,this.ADDR_IMP,1,3);this.setOp(this.INS_PLA,104,this.ADDR_IMP,1,4);this.setOp(this.INS_PLP,40,this.ADDR_IMP,1,4);this.setOp(this.INS_ROL,42,this.ADDR_ACC,1,2);this.setOp(this.INS_ROL,38,this.ADDR_ZP,2,5);this.setOp(this.INS_ROL,54,this.ADDR_ZPX,2,6);this.setOp(this.INS_ROL,46,this.ADDR_ABS,3,6);this.setOp(this.INS_ROL,62,this.ADDR_ABSX,3,7);this.setOp(this.INS_ROR,106,this.ADDR_ACC,1,2);this.setOp(this.INS_ROR,102,this.ADDR_ZP,2,5);this.setOp(this.INS_ROR,118,this.ADDR_ZPX,2,6);this.setOp(this.INS_ROR,110,this.ADDR_ABS,3,6);this.setOp(this.INS_ROR,126,this.ADDR_ABSX,3,7);this.setOp(this.INS_RTI,64,this.ADDR_IMP,1,6);this.setOp(this.INS_RTS,96,this.ADDR_IMP,1,6);this.setOp(this.INS_SBC,233,this.ADDR_IMM,2,2);this.setOp(this.INS_SBC,229,this.ADDR_ZP,2,3);this.setOp(this.INS_SBC,245,this.ADDR_ZPX,2,4);this.setOp(this.INS_SBC,237,this.ADDR_ABS,3,4);this.setOp(this.INS_SBC,253,this.ADDR_ABSX,3,4);this.setOp(this.INS_SBC,249,this.ADDR_ABSY,3,4);this.setOp(this.INS_SBC,225,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_SBC,241,this.ADDR_POSTIDXIND,2,5);this.setOp(this.INS_SEC,56,this.ADDR_IMP,1,2);this.setOp(this.INS_SED,248,this.ADDR_IMP,1,2);this.setOp(this.INS_SEI,120,this.ADDR_IMP,1,2);this.setOp(this.INS_STA,133,this.ADDR_ZP,2,3);this.setOp(this.INS_STA,149,this.ADDR_ZPX,2,4);this.setOp(this.INS_STA,141,this.ADDR_ABS,3,4);this.setOp(this.INS_STA,157,this.ADDR_ABSX,3,5);this.setOp(this.INS_STA,153,this.ADDR_ABSY,3,5);this.setOp(this.INS_STA,129,this.ADDR_PREIDXIND,2,6);this.setOp(this.INS_STA,145,this.ADDR_POSTIDXIND,2,6);this.setOp(this.INS_STX,134,this.ADDR_ZP,2,3);this.setOp(this.INS_STX,150,this.ADDR_ZPY,2,4);this.setOp(this.INS_STX,142,this.ADDR_ABS,3,4);this.setOp(this.INS_STY,132,this.ADDR_ZP,2,3);this.setOp(this.INS_STY,148,this.ADDR_ZPX,2,4);this.setOp(this.INS_STY,140,this.ADDR_ABS,3,4);this.setOp(this.INS_TAX,170,this.ADDR_IMP,1,2);this.setOp(this.INS_TAY,168,this.ADDR_IMP,1,2);this.setOp(this.INS_TSX,186,this.ADDR_IMP,1,2);this.setOp(this.INS_TXA,138,this.ADDR_IMP,1,2);this.setOp(this.INS_TXS,154,this.ADDR_IMP,1,2);this.setOp(this.INS_TYA,152,this.ADDR_IMP,1,2);this.cycTable=new Array(7,6,2,8,3,3,5,5,3,2,2,2,4,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,6,6,2,8,3,3,5,5,4,2,2,2,4,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,6,6,2,8,3,3,5,5,3,2,2,2,3,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,6,6,2,8,3,3,5,5,4,2,2,2,5,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,2,6,2,6,4,4,4,4,2,5,2,5,5,5,5,5,2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,2,5,2,5,4,4,4,4,2,4,2,4,4,4,4,4,2,6,2,8,3,3,5,5,2,2,2,2,4,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,2,6,3,8,3,3,5,5,2,2,2,2,4,4,6,6,2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7);this.instname=new Array(56);this.instname[0]="ADC";this.instname[1]="AND";
    this.instname[2]="ASL";this.instname[3]="BCC";this.instname[4]="BCS";this.instname[5]="BEQ";this.instname[6]="BIT";this.instname[7]="BMI";this.instname[8]="BNE";this.instname[9]="BPL";this.instname[10]="BRK";this.instname[11]="BVC";this.instname[12]="BVS";this.instname[13]="CLC";this.instname[14]="CLD";this.instname[15]="CLI";this.instname[16]="CLV";this.instname[17]="CMP";this.instname[18]="CPX";this.instname[19]="CPY";this.instname[20]="DEC";this.instname[21]="DEX";this.instname[22]="DEY";this.instname[23]="EOR";this.instname[24]="INC";this.instname[25]="INX";this.instname[26]="INY";this.instname[27]="JMP";this.instname[28]="JSR";this.instname[29]="LDA";this.instname[30]="LDX";this.instname[31]="LDY";this.instname[32]="LSR";this.instname[33]="NOP";this.instname[34]="ORA";this.instname[35]="PHA";this.instname[36]="PHP";this.instname[37]="PLA";this.instname[38]="PLP";this.instname[39]="ROL";this.instname[40]="ROR";this.instname[41]="RTI";this.instname[42]="RTS";this.instname[43]="SBC";this.instname[44]="SEC";this.instname[45]="SED";this.instname[46]="SEI";this.instname[47]="STA";this.instname[48]="STX";this.instname[49]="STY";this.instname[50]="TAX";this.instname[51]="TAY";this.instname[52]="TSX";this.instname[53]="TXA";this.instname[54]="TXS";this.instname[55]="TYA";this.addrDesc=new Array("Zero Page           ","Relative            ","Implied             ","Absolute            ","Accumulator         ","Immediate           ","Zero Page,X         ","Zero Page,Y         ","Absolute,X          ","Absolute,Y          ","Preindexed Indirect ","Postindexed Indirect","Indirect Absolute   ")};JSNES.CPU.OpData.prototype={INS_ADC:0,INS_AND:1,INS_ASL:2,INS_BCC:3,INS_BCS:4,INS_BEQ:5,INS_BIT:6,INS_BMI:7,INS_BNE:8,INS_BPL:9,INS_BRK:10,INS_BVC:11,INS_BVS:12,INS_CLC:13,INS_CLD:14,INS_CLI:15,INS_CLV:16,INS_CMP:17,INS_CPX:18,INS_CPY:19,INS_DEC:20,INS_DEX:21,INS_DEY:22,INS_EOR:23,INS_INC:24,INS_INX:25,INS_INY:26,INS_JMP:27,INS_JSR:28,INS_LDA:29,INS_LDX:30,INS_LDY:31,INS_LSR:32,INS_NOP:33,INS_ORA:34,INS_PHA:35,INS_PHP:36,INS_PLA:37,INS_PLP:38,INS_ROL:39,INS_ROR:40,INS_RTI:41,INS_RTS:42,INS_SBC:43,INS_SEC:44,INS_SED:45,INS_SEI:46,INS_STA:47,INS_STX:48,INS_STY:49,INS_TAX:50,INS_TAY:51,INS_TSX:52,INS_TXA:53,INS_TXS:54,INS_TYA:55,INS_DUMMY:56,ADDR_ZP:0,ADDR_REL:1,ADDR_IMP:2,ADDR_ABS:3,ADDR_ACC:4,ADDR_IMM:5,ADDR_ZPX:6,ADDR_ZPY:7,ADDR_ABSX:8,ADDR_ABSY:9,ADDR_PREIDXIND:10,ADDR_POSTIDXIND:11,ADDR_INDABS:12,setOp:function(inst,op,addr,size,cycles){this.opdata[op]=((inst&255))|((addr&255)<<8)|((size&255)<<16)|((cycles&255)<<24)}};